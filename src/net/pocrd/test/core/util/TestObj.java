// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/pocrd/test/core/util/Test_Obj.proto

package net.pocrd.test.core.util;

public final class TestObj {
  private TestObj() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Test_ObjOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .net.pocrd.test.core.util.Test_String so = 1;
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    boolean hasSo();
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    net.pocrd.test.core.util.TestString.Test_String getSo();
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSoOrBuilder();

    // repeated .net.pocrd.test.core.util.Test_String sos = 2;
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    java.util.List<net.pocrd.test.core.util.TestString.Test_String> 
        getSosList();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    net.pocrd.test.core.util.TestString.Test_String getSos(int index);
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    int getSosCount();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    java.util.List<? extends net.pocrd.test.core.util.TestString.Test_StringOrBuilder> 
        getSosOrBuilderList();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSosOrBuilder(
        int index);

    // optional int32 i = 3;
    /**
     * <code>optional int32 i = 3;</code>
     */
    boolean hasI();
    /**
     * <code>optional int32 i = 3;</code>
     */
    int getI();

    // repeated int32 is = 4;
    /**
     * <code>repeated int32 is = 4;</code>
     */
    java.util.List<java.lang.Integer> getIsList();
    /**
     * <code>repeated int32 is = 4;</code>
     */
    int getIsCount();
    /**
     * <code>repeated int32 is = 4;</code>
     */
    int getIs(int index);

    // optional int64 l = 5;
    /**
     * <code>optional int64 l = 5;</code>
     */
    boolean hasL();
    /**
     * <code>optional int64 l = 5;</code>
     */
    long getL();

    // repeated int64 ls = 6;
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    java.util.List<java.lang.Long> getLsList();
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    int getLsCount();
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    long getLs(int index);

    // optional bool b = 7;
    /**
     * <code>optional bool b = 7;</code>
     */
    boolean hasB();
    /**
     * <code>optional bool b = 7;</code>
     */
    boolean getB();

    // repeated bool bs = 8;
    /**
     * <code>repeated bool bs = 8;</code>
     */
    java.util.List<java.lang.Boolean> getBsList();
    /**
     * <code>repeated bool bs = 8;</code>
     */
    int getBsCount();
    /**
     * <code>repeated bool bs = 8;</code>
     */
    boolean getBs(int index);

    // optional float f = 9;
    /**
     * <code>optional float f = 9;</code>
     */
    boolean hasF();
    /**
     * <code>optional float f = 9;</code>
     */
    float getF();

    // repeated float fs = 10;
    /**
     * <code>repeated float fs = 10;</code>
     */
    java.util.List<java.lang.Float> getFsList();
    /**
     * <code>repeated float fs = 10;</code>
     */
    int getFsCount();
    /**
     * <code>repeated float fs = 10;</code>
     */
    float getFs(int index);

    // optional double d = 11;
    /**
     * <code>optional double d = 11;</code>
     */
    boolean hasD();
    /**
     * <code>optional double d = 11;</code>
     */
    double getD();

    // repeated double ds = 12;
    /**
     * <code>repeated double ds = 12;</code>
     */
    java.util.List<java.lang.Double> getDsList();
    /**
     * <code>repeated double ds = 12;</code>
     */
    int getDsCount();
    /**
     * <code>repeated double ds = 12;</code>
     */
    double getDs(int index);

    // optional string s = 13;
    /**
     * <code>optional string s = 13;</code>
     */
    boolean hasS();
    /**
     * <code>optional string s = 13;</code>
     */
    java.lang.String getS();
    /**
     * <code>optional string s = 13;</code>
     */
    com.google.protobuf.ByteString
        getSBytes();

    // repeated string ss = 14;
    /**
     * <code>repeated string ss = 14;</code>
     */
    java.util.List<java.lang.String>
    getSsList();
    /**
     * <code>repeated string ss = 14;</code>
     */
    int getSsCount();
    /**
     * <code>repeated string ss = 14;</code>
     */
    java.lang.String getSs(int index);
    /**
     * <code>repeated string ss = 14;</code>
     */
    com.google.protobuf.ByteString
        getSsBytes(int index);

    // optional .net.pocrd.test.core.util.Test_Obj another = 15;
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    boolean hasAnother();
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    net.pocrd.test.core.util.TestObj.Test_Obj getAnother();
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAnotherOrBuilder();

    // repeated .net.pocrd.test.core.util.Test_Obj as = 16;
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj> 
        getAsList();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    net.pocrd.test.core.util.TestObj.Test_Obj getAs(int index);
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    int getAsCount();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    java.util.List<? extends net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> 
        getAsOrBuilderList();
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code net.pocrd.test.core.util.Test_Obj}
   */
  public static final class Test_Obj extends
      com.google.protobuf.GeneratedMessage
      implements Test_ObjOrBuilder {
    // Use Test_Obj.newBuilder() to construct.
    private Test_Obj(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Test_Obj(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Test_Obj defaultInstance;
    public static Test_Obj getDefaultInstance() {
      return defaultInstance;
    }

    public Test_Obj getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Test_Obj(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              net.pocrd.test.core.util.TestString.Test_String.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = so_.toBuilder();
              }
              so_ = input.readMessage(net.pocrd.test.core.util.TestString.Test_String.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(so_);
                so_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sos_ = new java.util.ArrayList<net.pocrd.test.core.util.TestString.Test_String>();
                mutable_bitField0_ |= 0x00000002;
              }
              sos_.add(input.readMessage(net.pocrd.test.core.util.TestString.Test_String.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              i_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                is_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              is_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                is_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                is_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              l_ = input.readInt64();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                ls_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              ls_.add(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                ls_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                ls_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              b_ = input.readBool();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                bs_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              bs_.add(input.readBool());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                bs_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                bs_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              bitField0_ |= 0x00000010;
              f_ = input.readFloat();
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fs_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000200;
              }
              fs_.add(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                fs_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                fs_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 89: {
              bitField0_ |= 0x00000020;
              d_ = input.readDouble();
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                ds_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000800;
              }
              ds_.add(input.readDouble());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                ds_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                ds_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              bitField0_ |= 0x00000040;
              s_ = input.readBytes();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                ss_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00002000;
              }
              ss_.add(input.readBytes());
              break;
            }
            case 122: {
              net.pocrd.test.core.util.TestObj.Test_Obj.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = another_.toBuilder();
              }
              another_ = input.readMessage(net.pocrd.test.core.util.TestObj.Test_Obj.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(another_);
                another_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                as_ = new java.util.ArrayList<net.pocrd.test.core.util.TestObj.Test_Obj>();
                mutable_bitField0_ |= 0x00008000;
              }
              as_.add(input.readMessage(net.pocrd.test.core.util.TestObj.Test_Obj.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sos_ = java.util.Collections.unmodifiableList(sos_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          is_ = java.util.Collections.unmodifiableList(is_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          ls_ = java.util.Collections.unmodifiableList(ls_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          bs_ = java.util.Collections.unmodifiableList(bs_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fs_ = java.util.Collections.unmodifiableList(fs_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          ds_ = java.util.Collections.unmodifiableList(ds_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          ss_ = new com.google.protobuf.UnmodifiableLazyStringList(ss_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          as_ = java.util.Collections.unmodifiableList(as_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.pocrd.test.core.util.TestObj.internal_static_net_pocrd_test_core_util_Test_Obj_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.pocrd.test.core.util.TestObj.internal_static_net_pocrd_test_core_util_Test_Obj_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.pocrd.test.core.util.TestObj.Test_Obj.class, net.pocrd.test.core.util.TestObj.Test_Obj.Builder.class);
    }

    public static com.google.protobuf.Parser<Test_Obj> PARSER =
        new com.google.protobuf.AbstractParser<Test_Obj>() {
      public Test_Obj parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Test_Obj(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Test_Obj> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .net.pocrd.test.core.util.Test_String so = 1;
    public static final int SO_FIELD_NUMBER = 1;
    private net.pocrd.test.core.util.TestString.Test_String so_;
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    public boolean hasSo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    public net.pocrd.test.core.util.TestString.Test_String getSo() {
      return so_;
    }
    /**
     * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
     */
    public net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSoOrBuilder() {
      return so_;
    }

    // repeated .net.pocrd.test.core.util.Test_String sos = 2;
    public static final int SOS_FIELD_NUMBER = 2;
    private java.util.List<net.pocrd.test.core.util.TestString.Test_String> sos_;
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    public java.util.List<net.pocrd.test.core.util.TestString.Test_String> getSosList() {
      return sos_;
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    public java.util.List<? extends net.pocrd.test.core.util.TestString.Test_StringOrBuilder> 
        getSosOrBuilderList() {
      return sos_;
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    public int getSosCount() {
      return sos_.size();
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    public net.pocrd.test.core.util.TestString.Test_String getSos(int index) {
      return sos_.get(index);
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
     */
    public net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSosOrBuilder(
        int index) {
      return sos_.get(index);
    }

    // optional int32 i = 3;
    public static final int I_FIELD_NUMBER = 3;
    private int i_;
    /**
     * <code>optional int32 i = 3;</code>
     */
    public boolean hasI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 i = 3;</code>
     */
    public int getI() {
      return i_;
    }

    // repeated int32 is = 4;
    public static final int IS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> is_;
    /**
     * <code>repeated int32 is = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getIsList() {
      return is_;
    }
    /**
     * <code>repeated int32 is = 4;</code>
     */
    public int getIsCount() {
      return is_.size();
    }
    /**
     * <code>repeated int32 is = 4;</code>
     */
    public int getIs(int index) {
      return is_.get(index);
    }

    // optional int64 l = 5;
    public static final int L_FIELD_NUMBER = 5;
    private long l_;
    /**
     * <code>optional int64 l = 5;</code>
     */
    public boolean hasL() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 l = 5;</code>
     */
    public long getL() {
      return l_;
    }

    // repeated int64 ls = 6;
    public static final int LS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> ls_;
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getLsList() {
      return ls_;
    }
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    public int getLsCount() {
      return ls_.size();
    }
    /**
     * <code>repeated int64 ls = 6;</code>
     */
    public long getLs(int index) {
      return ls_.get(index);
    }

    // optional bool b = 7;
    public static final int B_FIELD_NUMBER = 7;
    private boolean b_;
    /**
     * <code>optional bool b = 7;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool b = 7;</code>
     */
    public boolean getB() {
      return b_;
    }

    // repeated bool bs = 8;
    public static final int BS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Boolean> bs_;
    /**
     * <code>repeated bool bs = 8;</code>
     */
    public java.util.List<java.lang.Boolean>
        getBsList() {
      return bs_;
    }
    /**
     * <code>repeated bool bs = 8;</code>
     */
    public int getBsCount() {
      return bs_.size();
    }
    /**
     * <code>repeated bool bs = 8;</code>
     */
    public boolean getBs(int index) {
      return bs_.get(index);
    }

    // optional float f = 9;
    public static final int F_FIELD_NUMBER = 9;
    private float f_;
    /**
     * <code>optional float f = 9;</code>
     */
    public boolean hasF() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float f = 9;</code>
     */
    public float getF() {
      return f_;
    }

    // repeated float fs = 10;
    public static final int FS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Float> fs_;
    /**
     * <code>repeated float fs = 10;</code>
     */
    public java.util.List<java.lang.Float>
        getFsList() {
      return fs_;
    }
    /**
     * <code>repeated float fs = 10;</code>
     */
    public int getFsCount() {
      return fs_.size();
    }
    /**
     * <code>repeated float fs = 10;</code>
     */
    public float getFs(int index) {
      return fs_.get(index);
    }

    // optional double d = 11;
    public static final int D_FIELD_NUMBER = 11;
    private double d_;
    /**
     * <code>optional double d = 11;</code>
     */
    public boolean hasD() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double d = 11;</code>
     */
    public double getD() {
      return d_;
    }

    // repeated double ds = 12;
    public static final int DS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Double> ds_;
    /**
     * <code>repeated double ds = 12;</code>
     */
    public java.util.List<java.lang.Double>
        getDsList() {
      return ds_;
    }
    /**
     * <code>repeated double ds = 12;</code>
     */
    public int getDsCount() {
      return ds_.size();
    }
    /**
     * <code>repeated double ds = 12;</code>
     */
    public double getDs(int index) {
      return ds_.get(index);
    }

    // optional string s = 13;
    public static final int S_FIELD_NUMBER = 13;
    private java.lang.Object s_;
    /**
     * <code>optional string s = 13;</code>
     */
    public boolean hasS() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string s = 13;</code>
     */
    public java.lang.String getS() {
      java.lang.Object ref = s_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          s_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string s = 13;</code>
     */
    public com.google.protobuf.ByteString
        getSBytes() {
      java.lang.Object ref = s_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        s_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string ss = 14;
    public static final int SS_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList ss_;
    /**
     * <code>repeated string ss = 14;</code>
     */
    public java.util.List<java.lang.String>
        getSsList() {
      return ss_;
    }
    /**
     * <code>repeated string ss = 14;</code>
     */
    public int getSsCount() {
      return ss_.size();
    }
    /**
     * <code>repeated string ss = 14;</code>
     */
    public java.lang.String getSs(int index) {
      return ss_.get(index);
    }
    /**
     * <code>repeated string ss = 14;</code>
     */
    public com.google.protobuf.ByteString
        getSsBytes(int index) {
      return ss_.getByteString(index);
    }

    // optional .net.pocrd.test.core.util.Test_Obj another = 15;
    public static final int ANOTHER_FIELD_NUMBER = 15;
    private net.pocrd.test.core.util.TestObj.Test_Obj another_;
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    public boolean hasAnother() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    public net.pocrd.test.core.util.TestObj.Test_Obj getAnother() {
      return another_;
    }
    /**
     * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
     */
    public net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAnotherOrBuilder() {
      return another_;
    }

    // repeated .net.pocrd.test.core.util.Test_Obj as = 16;
    public static final int AS_FIELD_NUMBER = 16;
    private java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj> as_;
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    public java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj> getAsList() {
      return as_;
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    public java.util.List<? extends net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> 
        getAsOrBuilderList() {
      return as_;
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    public int getAsCount() {
      return as_.size();
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    public net.pocrd.test.core.util.TestObj.Test_Obj getAs(int index) {
      return as_.get(index);
    }
    /**
     * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
     */
    public net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAsOrBuilder(
        int index) {
      return as_.get(index);
    }

    private void initFields() {
      so_ = net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance();
      sos_ = java.util.Collections.emptyList();
      i_ = 0;
      is_ = java.util.Collections.emptyList();
      l_ = 0L;
      ls_ = java.util.Collections.emptyList();
      b_ = false;
      bs_ = java.util.Collections.emptyList();
      f_ = 0F;
      fs_ = java.util.Collections.emptyList();
      d_ = 0D;
      ds_ = java.util.Collections.emptyList();
      s_ = "";
      ss_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      another_ = net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance();
      as_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, so_);
      }
      for (int i = 0; i < sos_.size(); i++) {
        output.writeMessage(2, sos_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, i_);
      }
      for (int i = 0; i < is_.size(); i++) {
        output.writeInt32(4, is_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, l_);
      }
      for (int i = 0; i < ls_.size(); i++) {
        output.writeInt64(6, ls_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(7, b_);
      }
      for (int i = 0; i < bs_.size(); i++) {
        output.writeBool(8, bs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(9, f_);
      }
      for (int i = 0; i < fs_.size(); i++) {
        output.writeFloat(10, fs_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(11, d_);
      }
      for (int i = 0; i < ds_.size(); i++) {
        output.writeDouble(12, ds_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(13, getSBytes());
      }
      for (int i = 0; i < ss_.size(); i++) {
        output.writeBytes(14, ss_.getByteString(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(15, another_);
      }
      for (int i = 0; i < as_.size(); i++) {
        output.writeMessage(16, as_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, so_);
      }
      for (int i = 0; i < sos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sos_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, i_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < is_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(is_.get(i));
        }
        size += dataSize;
        size += 1 * getIsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, l_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ls_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(ls_.get(i));
        }
        size += dataSize;
        size += 1 * getLsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, b_);
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBsList().size();
        size += dataSize;
        size += 1 * getBsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, f_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFsList().size();
        size += dataSize;
        size += 1 * getFsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, d_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDsList().size();
        size += dataSize;
        size += 1 * getDsList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getSBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ss_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ss_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSsList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, another_);
      }
      for (int i = 0; i < as_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, as_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.pocrd.test.core.util.TestObj.Test_Obj parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.pocrd.test.core.util.TestObj.Test_Obj prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.pocrd.test.core.util.Test_Obj}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.pocrd.test.core.util.TestObj.internal_static_net_pocrd_test_core_util_Test_Obj_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.pocrd.test.core.util.TestObj.internal_static_net_pocrd_test_core_util_Test_Obj_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.pocrd.test.core.util.TestObj.Test_Obj.class, net.pocrd.test.core.util.TestObj.Test_Obj.Builder.class);
      }

      // Construct using net.pocrd.test.core.util.TestObj.Test_Obj.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSoFieldBuilder();
          getSosFieldBuilder();
          getAnotherFieldBuilder();
          getAsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (soBuilder_ == null) {
          so_ = net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance();
        } else {
          soBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sosBuilder_ == null) {
          sos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sosBuilder_.clear();
        }
        i_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        is_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        l_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        ls_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        b_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        bs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        f_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        fs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        d_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        ds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        s_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        ss_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (anotherBuilder_ == null) {
          another_ = net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance();
        } else {
          anotherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (asBuilder_ == null) {
          as_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          asBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.pocrd.test.core.util.TestObj.internal_static_net_pocrd_test_core_util_Test_Obj_descriptor;
      }

      public net.pocrd.test.core.util.TestObj.Test_Obj getDefaultInstanceForType() {
        return net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance();
      }

      public net.pocrd.test.core.util.TestObj.Test_Obj build() {
        net.pocrd.test.core.util.TestObj.Test_Obj result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.pocrd.test.core.util.TestObj.Test_Obj buildPartial() {
        net.pocrd.test.core.util.TestObj.Test_Obj result = new net.pocrd.test.core.util.TestObj.Test_Obj(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (soBuilder_ == null) {
          result.so_ = so_;
        } else {
          result.so_ = soBuilder_.build();
        }
        if (sosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sos_ = java.util.Collections.unmodifiableList(sos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sos_ = sos_;
        } else {
          result.sos_ = sosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.i_ = i_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          is_ = java.util.Collections.unmodifiableList(is_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.is_ = is_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.l_ = l_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          ls_ = java.util.Collections.unmodifiableList(ls_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.ls_ = ls_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.b_ = b_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          bs_ = java.util.Collections.unmodifiableList(bs_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.bs_ = bs_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.f_ = f_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fs_ = java.util.Collections.unmodifiableList(fs_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.d_ = d_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          ds_ = java.util.Collections.unmodifiableList(ds_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.ds_ = ds_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.s_ = s_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          ss_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ss_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.ss_ = ss_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000080;
        }
        if (anotherBuilder_ == null) {
          result.another_ = another_;
        } else {
          result.another_ = anotherBuilder_.build();
        }
        if (asBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            as_ = java.util.Collections.unmodifiableList(as_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.as_ = as_;
        } else {
          result.as_ = asBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.pocrd.test.core.util.TestObj.Test_Obj) {
          return mergeFrom((net.pocrd.test.core.util.TestObj.Test_Obj)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.pocrd.test.core.util.TestObj.Test_Obj other) {
        if (other == net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance()) return this;
        if (other.hasSo()) {
          mergeSo(other.getSo());
        }
        if (sosBuilder_ == null) {
          if (!other.sos_.isEmpty()) {
            if (sos_.isEmpty()) {
              sos_ = other.sos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSosIsMutable();
              sos_.addAll(other.sos_);
            }
            onChanged();
          }
        } else {
          if (!other.sos_.isEmpty()) {
            if (sosBuilder_.isEmpty()) {
              sosBuilder_.dispose();
              sosBuilder_ = null;
              sos_ = other.sos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSosFieldBuilder() : null;
            } else {
              sosBuilder_.addAllMessages(other.sos_);
            }
          }
        }
        if (other.hasI()) {
          setI(other.getI());
        }
        if (!other.is_.isEmpty()) {
          if (is_.isEmpty()) {
            is_ = other.is_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIsIsMutable();
            is_.addAll(other.is_);
          }
          onChanged();
        }
        if (other.hasL()) {
          setL(other.getL());
        }
        if (!other.ls_.isEmpty()) {
          if (ls_.isEmpty()) {
            ls_ = other.ls_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLsIsMutable();
            ls_.addAll(other.ls_);
          }
          onChanged();
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (!other.bs_.isEmpty()) {
          if (bs_.isEmpty()) {
            bs_ = other.bs_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureBsIsMutable();
            bs_.addAll(other.bs_);
          }
          onChanged();
        }
        if (other.hasF()) {
          setF(other.getF());
        }
        if (!other.fs_.isEmpty()) {
          if (fs_.isEmpty()) {
            fs_ = other.fs_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFsIsMutable();
            fs_.addAll(other.fs_);
          }
          onChanged();
        }
        if (other.hasD()) {
          setD(other.getD());
        }
        if (!other.ds_.isEmpty()) {
          if (ds_.isEmpty()) {
            ds_ = other.ds_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureDsIsMutable();
            ds_.addAll(other.ds_);
          }
          onChanged();
        }
        if (other.hasS()) {
          bitField0_ |= 0x00001000;
          s_ = other.s_;
          onChanged();
        }
        if (!other.ss_.isEmpty()) {
          if (ss_.isEmpty()) {
            ss_ = other.ss_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureSsIsMutable();
            ss_.addAll(other.ss_);
          }
          onChanged();
        }
        if (other.hasAnother()) {
          mergeAnother(other.getAnother());
        }
        if (asBuilder_ == null) {
          if (!other.as_.isEmpty()) {
            if (as_.isEmpty()) {
              as_ = other.as_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureAsIsMutable();
              as_.addAll(other.as_);
            }
            onChanged();
          }
        } else {
          if (!other.as_.isEmpty()) {
            if (asBuilder_.isEmpty()) {
              asBuilder_.dispose();
              asBuilder_ = null;
              as_ = other.as_;
              bitField0_ = (bitField0_ & ~0x00008000);
              asBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAsFieldBuilder() : null;
            } else {
              asBuilder_.addAllMessages(other.as_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.pocrd.test.core.util.TestObj.Test_Obj parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.pocrd.test.core.util.TestObj.Test_Obj) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .net.pocrd.test.core.util.Test_String so = 1;
      private net.pocrd.test.core.util.TestString.Test_String so_ = net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder> soBuilder_;
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public boolean hasSo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String getSo() {
        if (soBuilder_ == null) {
          return so_;
        } else {
          return soBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public Builder setSo(net.pocrd.test.core.util.TestString.Test_String value) {
        if (soBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          so_ = value;
          onChanged();
        } else {
          soBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public Builder setSo(
          net.pocrd.test.core.util.TestString.Test_String.Builder builderForValue) {
        if (soBuilder_ == null) {
          so_ = builderForValue.build();
          onChanged();
        } else {
          soBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public Builder mergeSo(net.pocrd.test.core.util.TestString.Test_String value) {
        if (soBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              so_ != net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance()) {
            so_ =
              net.pocrd.test.core.util.TestString.Test_String.newBuilder(so_).mergeFrom(value).buildPartial();
          } else {
            so_ = value;
          }
          onChanged();
        } else {
          soBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public Builder clearSo() {
        if (soBuilder_ == null) {
          so_ = net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance();
          onChanged();
        } else {
          soBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String.Builder getSoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSoOrBuilder() {
        if (soBuilder_ != null) {
          return soBuilder_.getMessageOrBuilder();
        } else {
          return so_;
        }
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_String so = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder> 
          getSoFieldBuilder() {
        if (soBuilder_ == null) {
          soBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder>(
                  so_,
                  getParentForChildren(),
                  isClean());
          so_ = null;
        }
        return soBuilder_;
      }

      // repeated .net.pocrd.test.core.util.Test_String sos = 2;
      private java.util.List<net.pocrd.test.core.util.TestString.Test_String> sos_ =
        java.util.Collections.emptyList();
      private void ensureSosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sos_ = new java.util.ArrayList<net.pocrd.test.core.util.TestString.Test_String>(sos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder> sosBuilder_;

      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public java.util.List<net.pocrd.test.core.util.TestString.Test_String> getSosList() {
        if (sosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sos_);
        } else {
          return sosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public int getSosCount() {
        if (sosBuilder_ == null) {
          return sos_.size();
        } else {
          return sosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String getSos(int index) {
        if (sosBuilder_ == null) {
          return sos_.get(index);
        } else {
          return sosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder setSos(
          int index, net.pocrd.test.core.util.TestString.Test_String value) {
        if (sosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSosIsMutable();
          sos_.set(index, value);
          onChanged();
        } else {
          sosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder setSos(
          int index, net.pocrd.test.core.util.TestString.Test_String.Builder builderForValue) {
        if (sosBuilder_ == null) {
          ensureSosIsMutable();
          sos_.set(index, builderForValue.build());
          onChanged();
        } else {
          sosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder addSos(net.pocrd.test.core.util.TestString.Test_String value) {
        if (sosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSosIsMutable();
          sos_.add(value);
          onChanged();
        } else {
          sosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder addSos(
          int index, net.pocrd.test.core.util.TestString.Test_String value) {
        if (sosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSosIsMutable();
          sos_.add(index, value);
          onChanged();
        } else {
          sosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder addSos(
          net.pocrd.test.core.util.TestString.Test_String.Builder builderForValue) {
        if (sosBuilder_ == null) {
          ensureSosIsMutable();
          sos_.add(builderForValue.build());
          onChanged();
        } else {
          sosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder addSos(
          int index, net.pocrd.test.core.util.TestString.Test_String.Builder builderForValue) {
        if (sosBuilder_ == null) {
          ensureSosIsMutable();
          sos_.add(index, builderForValue.build());
          onChanged();
        } else {
          sosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder addAllSos(
          java.lang.Iterable<? extends net.pocrd.test.core.util.TestString.Test_String> values) {
        if (sosBuilder_ == null) {
          ensureSosIsMutable();
          super.addAll(values, sos_);
          onChanged();
        } else {
          sosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder clearSos() {
        if (sosBuilder_ == null) {
          sos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public Builder removeSos(int index) {
        if (sosBuilder_ == null) {
          ensureSosIsMutable();
          sos_.remove(index);
          onChanged();
        } else {
          sosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String.Builder getSosBuilder(
          int index) {
        return getSosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_StringOrBuilder getSosOrBuilder(
          int index) {
        if (sosBuilder_ == null) {
          return sos_.get(index);  } else {
          return sosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public java.util.List<? extends net.pocrd.test.core.util.TestString.Test_StringOrBuilder> 
           getSosOrBuilderList() {
        if (sosBuilder_ != null) {
          return sosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sos_);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String.Builder addSosBuilder() {
        return getSosFieldBuilder().addBuilder(
            net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance());
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public net.pocrd.test.core.util.TestString.Test_String.Builder addSosBuilder(
          int index) {
        return getSosFieldBuilder().addBuilder(
            index, net.pocrd.test.core.util.TestString.Test_String.getDefaultInstance());
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_String sos = 2;</code>
       */
      public java.util.List<net.pocrd.test.core.util.TestString.Test_String.Builder> 
           getSosBuilderList() {
        return getSosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder> 
          getSosFieldBuilder() {
        if (sosBuilder_ == null) {
          sosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.pocrd.test.core.util.TestString.Test_String, net.pocrd.test.core.util.TestString.Test_String.Builder, net.pocrd.test.core.util.TestString.Test_StringOrBuilder>(
                  sos_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sos_ = null;
        }
        return sosBuilder_;
      }

      // optional int32 i = 3;
      private int i_ ;
      /**
       * <code>optional int32 i = 3;</code>
       */
      public boolean hasI() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 i = 3;</code>
       */
      public int getI() {
        return i_;
      }
      /**
       * <code>optional int32 i = 3;</code>
       */
      public Builder setI(int value) {
        bitField0_ |= 0x00000004;
        i_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 i = 3;</code>
       */
      public Builder clearI() {
        bitField0_ = (bitField0_ & ~0x00000004);
        i_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 is = 4;
      private java.util.List<java.lang.Integer> is_ = java.util.Collections.emptyList();
      private void ensureIsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          is_ = new java.util.ArrayList<java.lang.Integer>(is_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getIsList() {
        return java.util.Collections.unmodifiableList(is_);
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public int getIsCount() {
        return is_.size();
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public int getIs(int index) {
        return is_.get(index);
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public Builder setIs(
          int index, int value) {
        ensureIsIsMutable();
        is_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public Builder addIs(int value) {
        ensureIsIsMutable();
        is_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public Builder addAllIs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIsIsMutable();
        super.addAll(values, is_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 is = 4;</code>
       */
      public Builder clearIs() {
        is_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int64 l = 5;
      private long l_ ;
      /**
       * <code>optional int64 l = 5;</code>
       */
      public boolean hasL() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 l = 5;</code>
       */
      public long getL() {
        return l_;
      }
      /**
       * <code>optional int64 l = 5;</code>
       */
      public Builder setL(long value) {
        bitField0_ |= 0x00000010;
        l_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 l = 5;</code>
       */
      public Builder clearL() {
        bitField0_ = (bitField0_ & ~0x00000010);
        l_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 ls = 6;
      private java.util.List<java.lang.Long> ls_ = java.util.Collections.emptyList();
      private void ensureLsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          ls_ = new java.util.ArrayList<java.lang.Long>(ls_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getLsList() {
        return java.util.Collections.unmodifiableList(ls_);
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public int getLsCount() {
        return ls_.size();
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public long getLs(int index) {
        return ls_.get(index);
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public Builder setLs(
          int index, long value) {
        ensureLsIsMutable();
        ls_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public Builder addLs(long value) {
        ensureLsIsMutable();
        ls_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public Builder addAllLs(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLsIsMutable();
        super.addAll(values, ls_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ls = 6;</code>
       */
      public Builder clearLs() {
        ls_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional bool b = 7;
      private boolean b_ ;
      /**
       * <code>optional bool b = 7;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool b = 7;</code>
       */
      public boolean getB() {
        return b_;
      }
      /**
       * <code>optional bool b = 7;</code>
       */
      public Builder setB(boolean value) {
        bitField0_ |= 0x00000040;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool b = 7;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000040);
        b_ = false;
        onChanged();
        return this;
      }

      // repeated bool bs = 8;
      private java.util.List<java.lang.Boolean> bs_ = java.util.Collections.emptyList();
      private void ensureBsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          bs_ = new java.util.ArrayList<java.lang.Boolean>(bs_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public java.util.List<java.lang.Boolean>
          getBsList() {
        return java.util.Collections.unmodifiableList(bs_);
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public int getBsCount() {
        return bs_.size();
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public boolean getBs(int index) {
        return bs_.get(index);
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public Builder setBs(
          int index, boolean value) {
        ensureBsIsMutable();
        bs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public Builder addBs(boolean value) {
        ensureBsIsMutable();
        bs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public Builder addAllBs(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBsIsMutable();
        super.addAll(values, bs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool bs = 8;</code>
       */
      public Builder clearBs() {
        bs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional float f = 9;
      private float f_ ;
      /**
       * <code>optional float f = 9;</code>
       */
      public boolean hasF() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float f = 9;</code>
       */
      public float getF() {
        return f_;
      }
      /**
       * <code>optional float f = 9;</code>
       */
      public Builder setF(float value) {
        bitField0_ |= 0x00000100;
        f_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float f = 9;</code>
       */
      public Builder clearF() {
        bitField0_ = (bitField0_ & ~0x00000100);
        f_ = 0F;
        onChanged();
        return this;
      }

      // repeated float fs = 10;
      private java.util.List<java.lang.Float> fs_ = java.util.Collections.emptyList();
      private void ensureFsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fs_ = new java.util.ArrayList<java.lang.Float>(fs_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public java.util.List<java.lang.Float>
          getFsList() {
        return java.util.Collections.unmodifiableList(fs_);
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public int getFsCount() {
        return fs_.size();
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public float getFs(int index) {
        return fs_.get(index);
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public Builder setFs(
          int index, float value) {
        ensureFsIsMutable();
        fs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public Builder addFs(float value) {
        ensureFsIsMutable();
        fs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public Builder addAllFs(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFsIsMutable();
        super.addAll(values, fs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fs = 10;</code>
       */
      public Builder clearFs() {
        fs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional double d = 11;
      private double d_ ;
      /**
       * <code>optional double d = 11;</code>
       */
      public boolean hasD() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double d = 11;</code>
       */
      public double getD() {
        return d_;
      }
      /**
       * <code>optional double d = 11;</code>
       */
      public Builder setD(double value) {
        bitField0_ |= 0x00000400;
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double d = 11;</code>
       */
      public Builder clearD() {
        bitField0_ = (bitField0_ & ~0x00000400);
        d_ = 0D;
        onChanged();
        return this;
      }

      // repeated double ds = 12;
      private java.util.List<java.lang.Double> ds_ = java.util.Collections.emptyList();
      private void ensureDsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          ds_ = new java.util.ArrayList<java.lang.Double>(ds_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public java.util.List<java.lang.Double>
          getDsList() {
        return java.util.Collections.unmodifiableList(ds_);
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public int getDsCount() {
        return ds_.size();
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public double getDs(int index) {
        return ds_.get(index);
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public Builder setDs(
          int index, double value) {
        ensureDsIsMutable();
        ds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public Builder addDs(double value) {
        ensureDsIsMutable();
        ds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public Builder addAllDs(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDsIsMutable();
        super.addAll(values, ds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double ds = 12;</code>
       */
      public Builder clearDs() {
        ds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional string s = 13;
      private java.lang.Object s_ = "";
      /**
       * <code>optional string s = 13;</code>
       */
      public boolean hasS() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string s = 13;</code>
       */
      public java.lang.String getS() {
        java.lang.Object ref = s_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          s_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string s = 13;</code>
       */
      public com.google.protobuf.ByteString
          getSBytes() {
        java.lang.Object ref = s_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          s_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string s = 13;</code>
       */
      public Builder setS(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        s_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string s = 13;</code>
       */
      public Builder clearS() {
        bitField0_ = (bitField0_ & ~0x00001000);
        s_ = getDefaultInstance().getS();
        onChanged();
        return this;
      }
      /**
       * <code>optional string s = 13;</code>
       */
      public Builder setSBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        s_ = value;
        onChanged();
        return this;
      }

      // repeated string ss = 14;
      private com.google.protobuf.LazyStringList ss_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          ss_ = new com.google.protobuf.LazyStringArrayList(ss_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public java.util.List<java.lang.String>
          getSsList() {
        return java.util.Collections.unmodifiableList(ss_);
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public int getSsCount() {
        return ss_.size();
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public java.lang.String getSs(int index) {
        return ss_.get(index);
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public com.google.protobuf.ByteString
          getSsBytes(int index) {
        return ss_.getByteString(index);
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public Builder setSs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsIsMutable();
        ss_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public Builder addSs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsIsMutable();
        ss_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public Builder addAllSs(
          java.lang.Iterable<java.lang.String> values) {
        ensureSsIsMutable();
        super.addAll(values, ss_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public Builder clearSs() {
        ss_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ss = 14;</code>
       */
      public Builder addSsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsIsMutable();
        ss_.add(value);
        onChanged();
        return this;
      }

      // optional .net.pocrd.test.core.util.Test_Obj another = 15;
      private net.pocrd.test.core.util.TestObj.Test_Obj another_ = net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> anotherBuilder_;
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public boolean hasAnother() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj getAnother() {
        if (anotherBuilder_ == null) {
          return another_;
        } else {
          return anotherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public Builder setAnother(net.pocrd.test.core.util.TestObj.Test_Obj value) {
        if (anotherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          another_ = value;
          onChanged();
        } else {
          anotherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public Builder setAnother(
          net.pocrd.test.core.util.TestObj.Test_Obj.Builder builderForValue) {
        if (anotherBuilder_ == null) {
          another_ = builderForValue.build();
          onChanged();
        } else {
          anotherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public Builder mergeAnother(net.pocrd.test.core.util.TestObj.Test_Obj value) {
        if (anotherBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              another_ != net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance()) {
            another_ =
              net.pocrd.test.core.util.TestObj.Test_Obj.newBuilder(another_).mergeFrom(value).buildPartial();
          } else {
            another_ = value;
          }
          onChanged();
        } else {
          anotherBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public Builder clearAnother() {
        if (anotherBuilder_ == null) {
          another_ = net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance();
          onChanged();
        } else {
          anotherBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj.Builder getAnotherBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getAnotherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAnotherOrBuilder() {
        if (anotherBuilder_ != null) {
          return anotherBuilder_.getMessageOrBuilder();
        } else {
          return another_;
        }
      }
      /**
       * <code>optional .net.pocrd.test.core.util.Test_Obj another = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> 
          getAnotherFieldBuilder() {
        if (anotherBuilder_ == null) {
          anotherBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder>(
                  another_,
                  getParentForChildren(),
                  isClean());
          another_ = null;
        }
        return anotherBuilder_;
      }

      // repeated .net.pocrd.test.core.util.Test_Obj as = 16;
      private java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj> as_ =
        java.util.Collections.emptyList();
      private void ensureAsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          as_ = new java.util.ArrayList<net.pocrd.test.core.util.TestObj.Test_Obj>(as_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> asBuilder_;

      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj> getAsList() {
        if (asBuilder_ == null) {
          return java.util.Collections.unmodifiableList(as_);
        } else {
          return asBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public int getAsCount() {
        if (asBuilder_ == null) {
          return as_.size();
        } else {
          return asBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj getAs(int index) {
        if (asBuilder_ == null) {
          return as_.get(index);
        } else {
          return asBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder setAs(
          int index, net.pocrd.test.core.util.TestObj.Test_Obj value) {
        if (asBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsIsMutable();
          as_.set(index, value);
          onChanged();
        } else {
          asBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder setAs(
          int index, net.pocrd.test.core.util.TestObj.Test_Obj.Builder builderForValue) {
        if (asBuilder_ == null) {
          ensureAsIsMutable();
          as_.set(index, builderForValue.build());
          onChanged();
        } else {
          asBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder addAs(net.pocrd.test.core.util.TestObj.Test_Obj value) {
        if (asBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsIsMutable();
          as_.add(value);
          onChanged();
        } else {
          asBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder addAs(
          int index, net.pocrd.test.core.util.TestObj.Test_Obj value) {
        if (asBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAsIsMutable();
          as_.add(index, value);
          onChanged();
        } else {
          asBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder addAs(
          net.pocrd.test.core.util.TestObj.Test_Obj.Builder builderForValue) {
        if (asBuilder_ == null) {
          ensureAsIsMutable();
          as_.add(builderForValue.build());
          onChanged();
        } else {
          asBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder addAs(
          int index, net.pocrd.test.core.util.TestObj.Test_Obj.Builder builderForValue) {
        if (asBuilder_ == null) {
          ensureAsIsMutable();
          as_.add(index, builderForValue.build());
          onChanged();
        } else {
          asBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder addAllAs(
          java.lang.Iterable<? extends net.pocrd.test.core.util.TestObj.Test_Obj> values) {
        if (asBuilder_ == null) {
          ensureAsIsMutable();
          super.addAll(values, as_);
          onChanged();
        } else {
          asBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder clearAs() {
        if (asBuilder_ == null) {
          as_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          asBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public Builder removeAs(int index) {
        if (asBuilder_ == null) {
          ensureAsIsMutable();
          as_.remove(index);
          onChanged();
        } else {
          asBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj.Builder getAsBuilder(
          int index) {
        return getAsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder getAsOrBuilder(
          int index) {
        if (asBuilder_ == null) {
          return as_.get(index);  } else {
          return asBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public java.util.List<? extends net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> 
           getAsOrBuilderList() {
        if (asBuilder_ != null) {
          return asBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(as_);
        }
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj.Builder addAsBuilder() {
        return getAsFieldBuilder().addBuilder(
            net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance());
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public net.pocrd.test.core.util.TestObj.Test_Obj.Builder addAsBuilder(
          int index) {
        return getAsFieldBuilder().addBuilder(
            index, net.pocrd.test.core.util.TestObj.Test_Obj.getDefaultInstance());
      }
      /**
       * <code>repeated .net.pocrd.test.core.util.Test_Obj as = 16;</code>
       */
      public java.util.List<net.pocrd.test.core.util.TestObj.Test_Obj.Builder> 
           getAsBuilderList() {
        return getAsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder> 
          getAsFieldBuilder() {
        if (asBuilder_ == null) {
          asBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.pocrd.test.core.util.TestObj.Test_Obj, net.pocrd.test.core.util.TestObj.Test_Obj.Builder, net.pocrd.test.core.util.TestObj.Test_ObjOrBuilder>(
                  as_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          as_ = null;
        }
        return asBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:net.pocrd.test.core.util.Test_Obj)
    }

    static {
      defaultInstance = new Test_Obj(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.pocrd.test.core.util.Test_Obj)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_pocrd_test_core_util_Test_Obj_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_pocrd_test_core_util_Test_Obj_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'net/pocrd/test/core/util/Test_Obj.prot" +
      "o\022\030net.pocrd.test.core.util\032*net/pocrd/t" +
      "est/core/util/Test_String.proto\"\340\002\n\010Test" +
      "_Obj\0221\n\002so\030\001 \001(\0132%.net.pocrd.test.core.u" +
      "til.Test_String\0222\n\003sos\030\002 \003(\0132%.net.pocrd" +
      ".test.core.util.Test_String\022\t\n\001i\030\003 \001(\005\022\n" +
      "\n\002is\030\004 \003(\005\022\t\n\001l\030\005 \001(\003\022\n\n\002ls\030\006 \003(\003\022\t\n\001b\030\007" +
      " \001(\010\022\n\n\002bs\030\010 \003(\010\022\t\n\001f\030\t \001(\002\022\n\n\002fs\030\n \003(\002\022" +
      "\t\n\001d\030\013 \001(\001\022\n\n\002ds\030\014 \003(\001\022\t\n\001s\030\r \001(\t\022\n\n\002ss\030" +
      "\016 \003(\t\0223\n\007another\030\017 \001(\0132\".net.pocrd.test.",
      "core.util.Test_Obj\022.\n\002as\030\020 \003(\0132\".net.poc" +
      "rd.test.core.util.Test_Obj"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_pocrd_test_core_util_Test_Obj_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_pocrd_test_core_util_Test_Obj_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_pocrd_test_core_util_Test_Obj_descriptor,
              new java.lang.String[] { "So", "Sos", "I", "Is", "L", "Ls", "B", "Bs", "F", "Fs", "D", "Ds", "S", "Ss", "Another", "As", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.pocrd.test.core.util.TestString.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
